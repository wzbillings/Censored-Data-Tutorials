{
  "hash": "82d18064c3150e5d6d6abf47389ee1c3",
  "result": {
    "markdown": "# Example Model 5: Interval Censoring\n\n\n\n\n\nFor our previous models, we've been concerned about data that have limits of\ndetection, including simultaneous upper and lower limits of detection. For\nthis example, we'll work through the data generating model for an outcome\nwhich is **interval censored** with a known predictor (extending to a censored\npredictor follows from this example and the previous examples on censored\npredictors).\n\nhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC3684949/#:~:text=In%20statistical%20literature%2C%20interval%20censoring,instead%20of%20being%20observed%20exactly. \n\nThe data generating process for interval censored data I think can be quite\nvariable. Typically I think about this in terms of HAI data, where the observed\nvalue is the floored version of the latent value, so a measurement process that\ngenerates a value that's rounded up or down is a data genearting process for\nan interval censored variable.\n\nThe most well-known type of interval censored data comes from studies where\nthe observation time does not completely cover the amount of time where an\nevent could have occurred. For example, consider a factory that runs\nregularly scheduled maintenance checks, say once per week. If a specific machine\nfails, but failures are only noticed at the maintenance checks, then we know\nonly that the failure occurred *after* the last maintenance check and *before*\nthe current maintenance check. So for example if we report our data weekly, we\ncould say that a particular machine was operational at week 2 and failed by\nweek 3, putting its failure time in the interval $(2, 3]$. (In this\nexample, I consider the interval closed on the upper bound because the machine\ncould have failed moments before the inspection and we would have known\nit was broken.) Such an example would lead to a data generating process where the failure times\nare drawn from some random distribution, and then the ceiling is returned by\nthe observation process once the failure times are converted to weeks.\n\n**Is there an example of interval censored data generating process that\ndoesn't come from floor/ceiling of observation process?**\n\nOne other way to get interval censored data is by responding to a question\non a survey which only asks for an interval rather than an exact number.\n\nFor this example, we'll do something different from the usual and model\n**machine failure times**. Consider a factory with $n$ machines. There is\nredundancy in the amount of available machines to do the factory's task, and\nthe machines are considered fairly robust, so maintenance checks are performed\nonce a week. For simplicity, we'll set the parameters such that the expected\nfailure time already has a rate in weeks, so we don't have to worry about\nconverting the units. If we wanted, e.g., the parameters to be on the scale\nof days we could probably just rescale the model.\n\n## Data generating process\n\nFor this model, let's assume that the rate of failure, $\\lambda_i$ is a linear\nfunction of some covariate $x_i$. I don't know that much about machines or what\nwould realistically cause them to fail, but we don't want to make the example\ntoo hard at this point, so we want $x_i$ to be an inherent characteristic of the\nmachine. Let's say $x_i$ is some integer number from $1$ to $5$ that controls\nhow the machine works -- it is inherent to the type of machine. If I can think\nof a good variable that might work for this, I'll update that later. The\nexpected failure time increases linearly by some amount $\\beta$ for each unit of\nincrease in $x_i$. There is also some baseline expected failure rate $\\alpha$\nshared by all of the machines. So the expected log failure time (if the failure\ntime were constant) can be given as\n$$\n\\log(\\lambda_i) = \\alpha + \\beta x_i.\n$$\nWe use the log link function here to ensure that expected failure times are\nalways positive, while the function of $x_i$ does not necessarily need to be.\n\nFinally, we assume that the longer each machine operates without being repaired,\nthe more likely the machine is to fail. We represent this by modeling the\nfailure time as a Weibull distribution with constant parameter $k$, which\ninfluences how quickly the failure rate changes over time. We assume this\nparameter is the same for all machines, which are identical other than the\nsetting $x_i$.\n\nSo then if our failure times were completely observed, the data generating\nprocess would be as follows.\n\n$$\n\\begin{align*}\nt^*_i &\\sim \\mathrm{Weibull}\\left(k, \\lambda_i\\right) \\\\\n\\lambda_i &= \\alpha + \\beta x_i\n\\end{align*}\n$$\n\nBut recall what I said before about running inspections only once a week.\nIf this were the case, assuming our failure times are also measured in weeks,\nwe would also have to apply a censoring mechanism for the data we observe,\ngiven by\n$$t_i = \\lceil t_i^* \\rceil.$$\n\nWe will deal with the interval censoring, as usual, by modifying the likelihood\nof the outcome. For a completely observed outcome $t^*_i$, the likelihood\nwould be\n$$\n\\mathcal{L}\\left(\\theta \\mid t_i^*\\right) = f(t_i^* \\mid \\theta),\n$$\nwhere $f(\\cdot)$ is the Weibull density function. However, a censored data\npoint actually lies at a point mass of probability and for our censored\nobservation, the contribution to the likelihood is\n$$\n\\mathcal{L}\\left(\\theta \\mid t_i\\right) = \\mathrm{Pr}\\left(\nL_i< t_i \\leq U_i\n\\right) = \\int_{L_i}^{U_i}f_{T_i}(\\tau) \\ d\\tau = F_{T_i}(U_i) - F_{T_i}(L_i),\n$$\nwhere $L_i = \\lfloor t_i^*\\rfloor = t_i - 1$ and\n$U_i = \\lceil t_i^* \\rceil = t_i$, both of which are assumed to be known\nconstants after the data are observed.\n\nThe Stan code for this would be\n````{.stan}\ntarget += log_diff_exp(\n\tweibull_lcdf(y[i] | k, lambda[i]),\n\tweibull_lcdf(y[i] - 1 | k, lambda[i])\n)\n```\nor equivalently\n````{.stan}\ntarget += log_diff_exp(\n\tweibull_lcdf(y_u[i] | k, lambda[i]),\n\tweibull_lcdf(y_l[i] | k, lambda[i])\n)\n```\nif the data is specified in the format we prefer. Note that we use the Stan\ninternal function `log_diff_exp()` for increased numerical precision rather than\ndividing the log values of the two functions manually. Note than there are[some\nconcerns](https://discourse.mc-stan.org/t/interval-censored-data-fails-with-weibull-but-not-gamma/28780)\nabout the numerical stability of the Weibull CDF function implemented in Stan,\nwith a [GitHub issue](https://github.com/stan-dev/math/issues/2810) for\nimproving the stability, open at time of writing. For improved numerical\nstability, we can rewrite the `weibull_lcdf()` function using Stan's newer math\nfunctions with improved stability.\n````{.stan}\nfunctions {\n  real my_weibull_lcdf(real y, real alpha, real sigma) {\n    return log1m_exp(-pow(y / sigma, alpha));\n  }\n}\n```\n\n## Data simulation\n\nSo with the data generating process, including the censoring mechanism, written\ndown, we can simulate some data. As usual, I decided to just plot the data and\nmess around with the parameters until I thought it looked right.\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2384590)\nsim_parms <- list(\n\tn = 210,\n\tk = 1.5,\n\talpha = 2,\n\tbeta = -0.35\n)\n\nstr(sim_parms)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 4\n $ n    : num 210\n $ k    : num 1.5\n $ alpha: num 2\n $ beta : num -0.35\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngen_data <- function(n, k, alpha, beta) {\n\tout <- tibble::tibble(\n\t\tx = sample(\n\t\t\t1:5, size = n, replace = TRUE,\n\t\t\tprob = c(0.4, 0.25, 0.2, 0.1, 0.05)\n\t\t),\n\t\tl_lambda = alpha + beta * x,\n\t\tlambda = exp(l_lambda),\n\t\tt_star = rweibull(n, shape = k, scale = lambda),\n\t\tt = ceiling(t_star)\n\t)\n\t\n\treturn(out)\n}\n\nsim_data <- do.call(gen_data, sim_parms)\nprint(sim_data, n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 210 × 5\n      x l_lambda lambda t_star     t\n  <int>    <dbl>  <dbl>  <dbl> <dbl>\n1     4     0.6    1.82  0.516     1\n2     3     0.95   2.59  3.32      4\n3     4     0.6    1.82  2.06      3\n4     1     1.65   5.21 11.0      11\n5     1     1.65   5.21  9.95     10\n# ℹ 205 more rows\n```\n:::\n\n```{.r .cell-code}\nplot(jitter(sim_data$x), sim_data$t)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsim_data |> dplyr::group_by(x) |> dplyr::summarise(eft = mean(t))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n      x   eft\n  <int> <dbl>\n1     1  5.82\n2     2  4.26\n3     3  3.29\n4     4  2.19\n5     5  1.75\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsim_data |>\n\tdplyr::mutate(\n\t\tx_jitter = x + rnorm(nrow(sim_data), 0, 0.1)\n\t) |>\n\tggplot2::ggplot() +\n\taes(x = x_jitter, y = t_star, group = (x)) +\n\tgeom_point() +\n\tgeom_segment(\n\t\taes(x = x_jitter, xend = x, y = t_star, yend = t)\n\t)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\tgeom_count(shape = 21, fill = \"#ffffff50\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ngeom_point: na.rm = FALSE\nstat_sum: na.rm = FALSE\nposition_identity \n```\n:::\n:::\n\n**NEED TO LOOK AT HOW BRMS HANDLES INTERVAL CENSORING**\nhttps://discourse.mc-stan.org/t/mixed-right-left-and-interval-censored-log-normal-with-brms/27571 \n\n## Fitting latent data\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_latent <- list()\ndat_latent$N <- nrow(sim_data)\ndat_latent$x <- sim_data$x\ndat_latent$y <- sim_data$t_star\n\nstr(dat_latent)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 3\n $ N: int 210\n $ x: int [1:210] 4 3 4 1 1 4 3 1 1 1 ...\n $ y: num [1:210] 0.516 3.321 2.061 10.966 9.951 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_pth <- here::here(pth_base, \"Ex5a.stan\")\nmod_l <- cmdstanr::cmdstan_model(mod_pth, compile = FALSE)\nmod_l$compile(pedantic = TRUE, force_recompile = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nIn file included from stan/lib/stan_math/lib/boost_1.78.0/boost/multi_array/multi_array_ref.hpp:32,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/multi_array.hpp:34,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/numeric/odeint/algebra/multi_array_algebra.hpp:22,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/numeric/odeint.hpp:63,\n                 from stan/lib/stan_math/stan/math/prim/functor/ode_rk45.hpp:9,\n                 from stan/lib/stan_math/stan/math/prim/functor/integrate_ode_rk45.hpp:6,\n                 from stan/lib/stan_math/stan/math/prim/functor.hpp:15,\n                 from stan/lib/stan_math/stan/math/rev/fun.hpp:198,\n                 from stan/lib/stan_math/stan/math/rev.hpp:10,\n                 from stan/lib/stan_math/stan/math.hpp:19,\n                 from stan/src/stan/model/model_header.hpp:4,\n                 from C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.hpp:2:\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:180:45: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  180 |         : public boost::functional::detail::unary_function<typename unary_traits<Predicate>::argument_type,bool>\n      |                                             ^~~~~~~~~~~~~~\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nIn file included from C:/rtools43/ucrt64/include/c++/13.2.0/string:49,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/bits/locale_classes.h:40,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/bits/ios_base.h:41,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/ios:44,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/istream:40,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/sstream:40,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/complex:45,\n                 from stan/lib/stan_math/lib/eigen_3.4.0/Eigen/Core:50,\n                 from stan/lib/stan_math/lib/eigen_3.4.0/Eigen/Dense:1,\n                 from stan/lib/stan_math/stan/math/prim/fun/Eigen.hpp:22,\n                 from stan/lib/stan_math/stan/math/rev.hpp:4:\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:214:45: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  214 |         : public boost::functional::detail::binary_function<\n      |                                             ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:252:45: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  252 |         : public boost::functional::detail::unary_function<\n      |                                             ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:299:45: warning: 'template<cl\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nass _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  299 |         : public boost::functional::detail::unary_function<\n      |                                             ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:345:57: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  345 |     class mem_fun_t : public boost::functional::detail::unary_function<T*, S>\n      |                                                         ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:361:58: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  361 |     class mem_fun1_t : public boost::functional::detail::binary_function<T*, A, S>\n      |                                                          ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:377:63: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  377 |     class const_mem_fun_t : public boost::functional::detail::unary_function<const T*, S>\n      |                                                               ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:393:64: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  393 |     class const_mem_fun1_t : public boost::functional::detail::binary_function<const T*, A, S>\n      |                                                                ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:438:61: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  438 |     class mem_fun_ref_t : public boost::functional::detail::unary_function<T&, S>\n      |                                                             ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:454:62: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  454 |     class mem_fun1_ref_t : public boost::functional::detail::binary_function<T&, A, S>\n      |                                                              ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nh:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:470:67: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  470 |     class const_mem_fun_ref_t : public boost::functional::detail::unary_function<const T&, S>\n      |                                                                   ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:487:68: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  487 |     class const_mem_fun1_ref_t : public boost::functional::detail::binary_function<const T&, A, S>\n      |                                                                    ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:533:73: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  533 |     class pointer_to_unary_function : public boost::functional::detail::unary_function<Arg,Result>\n      |                                                                         ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:557:74: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  557 |     class pointer_to_binary_function : public boost::functional::detail::binary_fun\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nction<Arg1,Arg2,Result>\n      |                                                                          ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nIn file included from stan/lib/stan_math/stan/math/prim/prob/von_mises_lccdf.hpp:5,\n                 from stan/lib/stan_math/stan/math/prim/prob/von_mises_ccdf_log.hpp:4,\n                 from stan/lib/stan_math/stan/math/prim/prob.hpp:356,\n                 from stan/lib/stan_math/stan/math/prim.hpp:16,\n                 from stan/lib/stan_math/stan/math/rev.hpp:14:\nstan/lib/stan_math/stan/math/prim/prob/von_mises_cdf.hpp: In function 'stan::return_type_t<T_x, T_sigma, T_l> stan::math::von_mises_cdf(const T_x&, const T_mu&, const T_k&)':\nstan/lib/stan_math/stan/math/prim/prob/von_mises_cdf.hpp:194: note: '-Wmisleading-indentation' is disabled from this point onwards, since column-tracking was disabled due to the size of the code/headers\n  194 |       if (cdf_n < 0.0)\n      | \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nstan/lib/stan_math/stan/math/prim/prob/von_mises_cdf.hpp:194: note: adding '-flarge-source-files' will allow for more column-tracking support, at the expense of compilation time and memory\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nIn file included from stan/src/stan/model/model_header.hpp:11:\nstan/src/stan/model/model_base_crtp.hpp: At global scope:\nstan/src/stan/model/model_base_crtp.hpp:198: warning: 'void stan::model::model_base_crtp<M>::write_array(boost::random::ecuyer1988&, std::vector<double, std::allocator<double> >&, std::vector<int>&, std::vector<double, std::allocator<double> >&, bool, bool, std::ostream*) const [with M = Ex5a_model_namespace::Ex5a_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]' was hidden [-Woverloaded-virtual=]\n  198 |   void write_array(boost::ecuyer1988& rng, std::vector<double>& theta,\n      | \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nC:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.hpp:350: note:   by 'Ex5a_model_namespace::Ex5a_model::write_array'\n  350 |   write_array(RNG& base_rng, std::vector<double>& params_r, std::vector<int>&\n      | \nstan/src/stan/model/model_base_crtp.hpp:136: warning: 'void stan::model::model_base_crtp<M>::write_array(boost::random::ecuyer1988&, Eigen::VectorXd&, Eigen::VectorXd&, bool, bool, std::ostream*) const [with M = Ex5a_model_namespace::Ex5a_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]' was hidden [-Woverloaded-virtual=]\n  136 |   void write_array(boost::ecuyer1988& rng, Eigen::VectorXd& theta,\n      | \nC:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.hpp:350: note:   by 'Ex5a_model_namespace::Ex5a_model::write_array'\n  350 |   write_array(RNG& base_rng, std::vector<double>& params_r, std::vector<int>&\n      | \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_l <- mod_l$sample(\n\tdat_latent,\n\tseed = 546465,\n\tparallel_chains = 4,\n\titer_warmup = 500,\n\titer_sampling = 2500,\n\tshow_messages = T\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRunning MCMC with 4 parallel chains...\n\nChain 1 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 1 Iteration:  100 / 3000 [  3%]  (Warmup) \nChain 1 Iteration:  200 / 3000 [  6%]  (Warmup) \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nChain 2 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 2 Iteration:  100 / 3000 [  3%]  (Warmup) \nChain 2 Iteration:  200 / 3000 [  6%]  (Warmup) \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Scale parameter is inf, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nChain 3 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 3 Iteration:  100 / 3000 [  3%]  (Warmup) \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Scale parameter is inf, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Scale parameter is inf, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nChain 4 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 4 Iteration:  100 / 3000 [  3%]  (Warmup) \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: weibull_lpdf: Scale parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: weibull_lpdf: Scale parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nChain 1 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 1 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 1 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 1 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 1 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 1 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 1 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 1 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 1 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 2 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 2 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 2 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 2 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 2 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 2 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 2 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 2 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 3 Iteration:  200 / 3000 [  6%]  (Warmup) \nChain 3 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 3 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 3 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 3 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 3 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 3 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 3 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 3 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 4 Iteration:  200 / 3000 [  6%]  (Warmup) \nChain 4 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 4 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 4 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 4 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 4 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 4 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 4 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 1 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 1 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 1 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 1 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 2 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 2 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 2 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 3 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 3 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 3 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 3 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 4 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 4 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 4 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 1 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 1 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 2 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 2 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 3 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 3 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 3 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 4 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 4 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 1 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 1 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 1 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 2 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 2 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 3 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 3 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 4 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 4 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 1 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 1 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 2 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 2 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 3 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 3 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 3 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 4 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 4 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 4 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 1 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 1 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 1 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 2 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 2 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 2 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 3 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 3 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 3 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 4 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 4 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 1 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 1 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 1 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 2 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 2 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 3 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 3 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 3 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 4 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 4 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 1 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 1 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 2 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 2 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 3 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 3 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 3 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 4 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 4 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 1 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 1 finished in 1.5 seconds.\nChain 3 finished in 1.4 seconds.\nChain 2 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 2 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 2 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 4 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 4 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 4 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 2 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 2 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 4 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 4 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 4 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 2 finished in 1.7 seconds.\nChain 4 finished in 1.7 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 1.6 seconds.\nTotal execution time: 1.9 seconds.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_l$summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 10\n  variable     mean   median     sd    mad       q5      q95  rhat ess_bulk\n  <chr>       <num>    <num>  <num>  <num>    <num>    <num> <num>    <num>\n1 lp__     -453.    -453.    1.21   0.970  -456.    -452.     1.00    4128.\n2 alpha       2.14     2.14  0.0997 0.101     1.98     2.30   1.00    3284.\n3 beta       -0.360   -0.360 0.0392 0.0396   -0.424   -0.296  1.00    3247.\n4 k           1.45     1.45  0.0782 0.0786    1.32     1.58   1.00    6020.\n# ℹ 1 more variable: ess_tail <num>\n```\n:::\n:::\n\n## Naive method -- use the same model for censored data\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_naive <- dat_latent\ndat_naive$y <- sim_data$t\nstr(dat_naive)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 3\n $ N: int 210\n $ x: int [1:210] 4 3 4 1 1 4 3 1 1 1 ...\n $ y: num [1:210] 1 4 3 11 10 1 3 4 2 4 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_n <- mod_l$sample(\n\tdat_naive,\n\tseed = 546465,\n\tparallel_chains = 4,\n\titer_warmup = 500,\n\titer_sampling = 2500,\n\tshow_messages = T\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRunning MCMC with 4 parallel chains...\n\nChain 1 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 1 Iteration:  100 / 3000 [  3%]  (Warmup) \nChain 1 Iteration:  200 / 3000 [  6%]  (Warmup) \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Scale parameter is inf, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nChain 2 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 2 Iteration:  100 / 3000 [  3%]  (Warmup) \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Scale parameter is inf, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 2 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nChain 3 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 3 Iteration:  100 / 3000 [  3%]  (Warmup) \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Scale parameter is inf, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: weibull_lpdf: Scale parameter is inf, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nChain 4 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 4 Iteration:  100 / 3000 [  3%]  (Warmup) \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: weibull_lpdf: Scale parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: weibull_lpdf: Shape parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: weibull_lpdf: Scale parameter is 0, but must be positive finite! (in 'C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c03efc52a3.stan', line 38, column 2 to column 31)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nChain 1 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 1 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 1 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 1 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 1 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 1 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 1 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 2 Iteration:  200 / 3000 [  6%]  (Warmup) \nChain 2 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 2 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 2 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 2 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 2 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 2 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 2 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 3 Iteration:  200 / 3000 [  6%]  (Warmup) \nChain 3 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 3 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 3 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 3 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 3 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 3 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 4 Iteration:  200 / 3000 [  6%]  (Warmup) \nChain 4 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 4 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 4 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 4 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 4 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 4 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 4 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 1 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 1 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 1 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 2 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 2 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 3 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 3 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 3 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 4 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 4 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 4 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 1 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 1 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 2 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 2 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 2 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 3 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 3 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 4 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 4 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 1 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 1 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 2 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 2 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 3 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 3 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 4 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 4 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 4 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 1 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 1 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 1 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 2 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 2 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 3 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 3 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 4 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 4 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 1 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 1 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 2 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 2 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 3 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 3 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 3 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 4 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 4 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 4 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 1 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 1 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 2 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 2 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 3 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 3 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 4 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 4 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 1 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 1 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 2 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 2 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 3 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 3 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 4 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 4 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 4 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 1 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 1 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 1 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 2 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 2 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 3 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 3 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 4 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 4 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 1 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 1 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 2 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 2 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 3 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 3 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 4 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 4 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 4 finished in 1.6 seconds.\nChain 1 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 2 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 2 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 2 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 3 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 3 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 1 finished in 1.7 seconds.\nChain 2 finished in 1.8 seconds.\nChain 3 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 3 finished in 1.8 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 1.7 seconds.\nTotal execution time: 1.9 seconds.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_n$summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 10\n  variable     mean   median     sd    mad       q5      q95  rhat ess_bulk\n  <chr>       <num>    <num>  <num>  <num>    <num>    <num> <num>    <num>\n1 lp__     -461.    -460.    1.24   1.02   -463.    -459.     1.00    3681.\n2 alpha       2.19     2.19  0.0816 0.0820    2.06     2.33   1.00    4263.\n3 beta       -0.307   -0.307 0.0319 0.0316   -0.360   -0.254  1.00    4313.\n4 k           1.76     1.76  0.0948 0.0935    1.61     1.92   1.00    5299.\n# ℹ 1 more variable: ess_tail <num>\n```\n:::\n:::\n\n\n## Fitting censored data\n\nIn this parametrization, the outcome variable $t_i$Note that this measurement process will generate an integer valued response.\nHowever, we know that if the value of $t_i = t$, then in reality\n$t_i \\in (t - 1, t]$, and we can never know the true value of $t_i$ because\nwe don't do inspections more often.\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_censored <- list()\ndat_censored$N <- nrow(sim_data)\ndat_censored$x <- sim_data$x\ndat_censored$y1 <- sim_data$t - 1\ndat_censored$y2 <- sim_data$t\n\nstr(dat_censored)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 4\n $ N : int 210\n $ x : int [1:210] 4 3 4 1 1 4 3 1 1 1 ...\n $ y1: num [1:210] 0 3 2 10 9 0 2 3 1 3 ...\n $ y2: num [1:210] 1 4 3 11 10 1 3 4 2 4 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_pth <- here::here(pth_base, \"Ex5b.stan\")\nmod_c <- cmdstanr::cmdstan_model(mod_pth, compile = FALSE)\nmod_c$compile(pedantic = TRUE, force_recompile = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nIn file included from stan/lib/stan_math/lib/boost_1.78.0/boost/multi_array/multi_array_ref.hpp:32,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/multi_array.hpp:34,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/numeric/odeint/algebra/multi_array_algebra.hpp:22,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/numeric/odeint.hpp:63,\n                 from stan/lib/stan_math/stan/math/prim/functor/ode_rk45.hpp:9,\n                 from stan/lib/stan_math/stan/math/prim/functor/integrate_ode_rk45.hpp:6,\n                 from stan/lib/stan_math/stan/math/prim/functor.hpp:15,\n                 from stan/lib/stan_math/stan/math/rev/fun.hpp:198,\n                 from stan/lib/stan_math/stan/math/rev.hpp:10,\n                 from stan/lib/stan_math/stan/math.hpp:19,\n                 from stan/src/stan/model/model_header.hpp:4,\n                 from C:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c025242c9.hpp:2:\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:180:45: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  180 |         : public boost::functional::detail::unary_function<typename unary_traits<Predicate>::argument_type,bool>\n      |                                             ^~~~~~~~~~~~~~\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nIn file included from C:/rtools43/ucrt64/include/c++/13.2.0/string:49,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/bits/locale_classes.h:40,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/bits/ios_base.h:41,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/ios:44,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/istream:40,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/sstream:40,\n                 from C:/rtools43/ucrt64/include/c++/13.2.0/complex:45,\n                 from stan/lib/stan_math/lib/eigen_3.4.0/Eigen/Core:50,\n                 from stan/lib/stan_math/lib/eigen_3.4.0/Eigen/Dense:1,\n                 from stan/lib/stan_math/stan/math/prim/fun/Eigen.hpp:22,\n                 from stan/lib/stan_math/stan/math/rev.hpp:4:\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:214:45: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  214 |         : public boost::functional::detail::binary_function<\n      |                                             ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:252:45: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  252 |         : public boost::functional::detail::unary_function<\n      |                                             ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:299:45: warning: 'template<cl\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nass _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  299 |         : public boost::functional::detail::unary_function<\n      |                                             ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:345:57: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  345 |     class mem_fun_t : public boost::functional::detail::unary_function<T*, S>\n      |                                                         ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:361:58: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  361 |     class mem_fun1_t : public boost::functional::detail::binary_function<T*, A, S>\n      |                                                          ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:377:63: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  377 |     class const_mem_fun_t : public boost::functional::detail::unary_function<const T*, S>\n      |                                                               ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:393:64: warning: \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  393 |     class const_mem_fun1_t : public boost::functional::detail::binary_function<const T*, A, S>\n      |                                                                ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:438:61: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  438 |     class mem_fun_ref_t : public boost::functional::detail::unary_function<T&, S>\n      |                                                             ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:454:62: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  454 |     class mem_fun1_ref_t : public boost::functional::detail::binary_function<T&, A, S>\n      |                                                              ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:470:67: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  470 |     class const_mem_fun_ref_t : public boost::functional::detail::unary_function<const T&, S>\n      |                                                                   ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:487:68: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  487 |     class const_mem_fun1_ref_t : public boost::functional::detail::binary_function<const T&, A, S>\n      |                                                                    ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:533:73: warning: 'template<class _Arg, class _Result> struct std::unary_function' is deprecated [-Wdeprecated-declarations]\n  533 |     class pointer_to_unary_function : public boost::functional::detail::unary_function<Arg,Result>\n      |                                                                         ^~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:557:74: warning: 'template<class _Arg1, class _Arg2, class _Result> struct std::binary_function' is deprecated [-Wdeprecated-declarations]\n  557 |     class pointer_to_binary_function : public boost::functional::detail::binary_function<Arg1,Arg2,Result>\n      |                                                                          ^~~~~~~~~~~~~~~\nC:/rtools43/ucrt64/include/c++/13.2.0/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nIn file included from stan/lib/stan_math/stan/math/prim/prob/von_mises_lccdf.hpp:5,\n                 from stan/lib/stan_math/stan/math/prim/prob/von_mises_ccdf_log.hpp:4,\n                 from stan/lib/stan_math/stan/math/prim/prob.hpp:356,\n                 from stan/lib/stan_math/stan/math/prim.hpp:16,\n                 from stan/lib/stan_math/stan/math/rev.hpp:14:\nstan/lib/stan_math/stan/math/prim/prob/von_mises_cdf.hpp: In function 'stan::return_type_t<T_x, T_sigma, T_l> stan::math::von_mises_cdf(const T_x&, const T_mu&, const T_k&)':\nstan/lib/stan_math/stan/math/prim/prob/von_mises_cdf.hpp:194: note: '-Wmisleading-indentation' is disabled from this point onwards, since column-tracking was disabled due to the size of the code/headers\n  194 |       if (cdf_n < 0.0)\n      | \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nstan/lib/stan_math/stan/math/prim/prob/von_mises_cdf.hpp:194: note: adding '-flarge-source-files' will allow for more column-tracking support, at the expense of compilation time and memory\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nIn file included from stan/src/stan/model/model_header.hpp:11:\nstan/src/stan/model/model_base_crtp.hpp: At global scope:\nstan/src/stan/model/model_base_crtp.hpp:198: warning: 'void stan::model::model_base_crtp<M>::write_array(boost::random::ecuyer1988&, std::vector<double, std::allocator<double> >&, std::vector<int>&, std::vector<double, std::allocator<double> >&, bool, bool, std::ostream*) const [with M = Ex5b_model_namespace::Ex5b_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]' was hidden [-Woverloaded-virtual=]\n  198 |   void write_array(boost::ecuyer1988& rng, std::vector<double>& theta,\n      | \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nC:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c025242c9.hpp:408: note:   by 'Ex5b_model_namespace::Ex5b_model::write_array'\n  408 |   write_array(RNG& base_rng, std::vector<double>& params_r, std::vector<int>&\n      | \nstan/src/stan/model/model_base_crtp.hpp:136: warning: 'void stan::model::model_base_crtp<M>::write_array(boost::random::ecuyer1988&, Eigen::VectorXd&, Eigen::VectorXd&, bool, bool, std::ostream*) const [with M = Ex5b_model_namespace::Ex5b_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]' was hidden [-Woverloaded-virtual=]\n  136 |   void write_array(boost::ecuyer1988& rng, Eigen::VectorXd& theta,\n      | \nC:/Users/Zane/AppData/Local/Temp/Rtmpewo0xJ/model-20c025242c9.hpp:408: note:   by 'Ex5b_model_namespace::Ex5b_model::write_array'\n  408 |   write_array(RNG& base_rng, std::vector<double>& params_r, std::vector<int>&\n      | \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_c <- mod_c$sample(\n\tdat_censored,\n\tseed = 3248315,\n\tparallel_chains = 4,\n\titer_warmup = 500,\n\titer_sampling = 2500,\n\tshow_messages = T\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRunning MCMC with 4 parallel chains...\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Rejecting initial value:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1   Log probability evaluates to log(0), i.e. negative infinity.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1   Stan can't start sampling from this initial value.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nChain 1 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 2 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 3 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 4 Iteration:    1 / 3000 [  0%]  (Warmup) \nChain 1 Iteration:  100 / 3000 [  3%]  (Warmup) \nChain 1 Iteration:  200 / 3000 [  6%]  (Warmup) \nChain 2 Iteration:  100 / 3000 [  3%]  (Warmup) \nChain 2 Iteration:  200 / 3000 [  6%]  (Warmup) \nChain 3 Iteration:  100 / 3000 [  3%]  (Warmup) \nChain 3 Iteration:  200 / 3000 [  6%]  (Warmup) \nChain 4 Iteration:  100 / 3000 [  3%]  (Warmup) \nChain 4 Iteration:  200 / 3000 [  6%]  (Warmup) \nChain 1 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 2 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 3 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 4 Iteration:  300 / 3000 [ 10%]  (Warmup) \nChain 1 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 2 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 3 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 4 Iteration:  400 / 3000 [ 13%]  (Warmup) \nChain 1 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 1 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 2 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 2 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 4 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 4 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 1 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 2 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 3 Iteration:  500 / 3000 [ 16%]  (Warmup) \nChain 4 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 2 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 3 Iteration:  501 / 3000 [ 16%]  (Sampling) \nChain 3 Iteration:  600 / 3000 [ 20%]  (Sampling) \nChain 3 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 4 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 1 Iteration:  700 / 3000 [ 23%]  (Sampling) \nChain 2 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 3 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 4 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 1 Iteration:  800 / 3000 [ 26%]  (Sampling) \nChain 3 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 4 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 1 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 2 Iteration:  900 / 3000 [ 30%]  (Sampling) \nChain 3 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 4 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 1 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 2 Iteration: 1000 / 3000 [ 33%]  (Sampling) \nChain 3 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 4 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 1 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 2 Iteration: 1100 / 3000 [ 36%]  (Sampling) \nChain 3 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 2 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 3 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 4 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 1 Iteration: 1200 / 3000 [ 40%]  (Sampling) \nChain 3 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 4 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 1 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 2 Iteration: 1300 / 3000 [ 43%]  (Sampling) \nChain 3 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 4 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 1 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 2 Iteration: 1400 / 3000 [ 46%]  (Sampling) \nChain 3 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 4 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 3 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 4 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 1 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 2 Iteration: 1500 / 3000 [ 50%]  (Sampling) \nChain 3 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 1 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 2 Iteration: 1600 / 3000 [ 53%]  (Sampling) \nChain 3 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 4 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 1 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 2 Iteration: 1700 / 3000 [ 56%]  (Sampling) \nChain 3 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 3 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 4 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 1 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 2 Iteration: 1800 / 3000 [ 60%]  (Sampling) \nChain 3 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 4 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 1 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 2 Iteration: 1900 / 3000 [ 63%]  (Sampling) \nChain 3 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 4 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 3 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 4 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 1 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 2 Iteration: 2000 / 3000 [ 66%]  (Sampling) \nChain 3 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 4 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 1 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 2 Iteration: 2100 / 3000 [ 70%]  (Sampling) \nChain 3 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 4 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 1 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 2 Iteration: 2200 / 3000 [ 73%]  (Sampling) \nChain 3 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 4 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 3 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 4 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 1 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 2 Iteration: 2300 / 3000 [ 76%]  (Sampling) \nChain 3 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 1 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 2 Iteration: 2400 / 3000 [ 80%]  (Sampling) \nChain 3 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 4 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 3 finished in 3.4 seconds.\nChain 1 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 2 Iteration: 2500 / 3000 [ 83%]  (Sampling) \nChain 4 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 1 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 2 Iteration: 2600 / 3000 [ 86%]  (Sampling) \nChain 4 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 4 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 1 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 2 Iteration: 2700 / 3000 [ 90%]  (Sampling) \nChain 4 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 4 finished in 3.9 seconds.\nChain 1 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 2 Iteration: 2800 / 3000 [ 93%]  (Sampling) \nChain 1 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 2 Iteration: 2900 / 3000 [ 96%]  (Sampling) \nChain 1 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 2 Iteration: 3000 / 3000 [100%]  (Sampling) \nChain 1 finished in 4.3 seconds.\nChain 2 finished in 4.3 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 4.0 seconds.\nTotal execution time: 4.5 seconds.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_c$summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 10\n  variable     mean   median     sd    mad       q5      q95  rhat ess_bulk\n  <chr>       <num>    <num>  <num>  <num>    <num>    <num> <num>    <num>\n1 lp__     -458.    -457.    1.26   1.02   -460.    -456.     1.00    4046.\n2 alpha       2.12     2.12  0.101  0.0977    1.96     2.29   1.00    3599.\n3 beta       -0.355   -0.354 0.0401 0.0399   -0.421   -0.288  1.00    3669.\n4 k           1.44     1.44  0.0874 0.0859    1.30     1.59   1.00    5322.\n# ℹ 1 more variable: ess_tail <num>\n```\n:::\n:::\n\n## Making the interval wider\n\nWe can introduce more\n\n## Midpoint correction\n\n### Original interval\n\n### Wider interval\n\n\n\n\n<!-- END OF FILE -->\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}